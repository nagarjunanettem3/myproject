edureka@kmaster:~$ ls
Desktop    Downloads  eclipse-workspace  selenium-java-3.141.59
Documents  data       git                thinclient_drives
edureka@kmaster:~$ cd Downloads
edureka@kmaster:~/Downloads$ ls
aws.docx  dev_m2_assignment1_v1_4na_mp75ptv.pdf  project  sample-project.zip
edureka@kmaster:~/Downloads$ cd project
edureka@kmaster:~/Downloads/project$ git init
Initialized empty Git repository in /home/edureka/Downloads/project/.git/
edureka@kmaster:~/Downloads/project$ ll -al
total 28
drwx------ 6 edureka edureka 4096 Dec  7 17:51 ./
drwxr-xr-x 3 edureka edureka 4096 Dec  7 17:47 ../
drwxr-xr-x 7 edureka edureka 4096 Dec  7 17:51 .git/
drwx------ 2 edureka edureka 4096 Nov 14  2017 css/
drwx------ 2 edureka edureka 4096 Nov 14  2017 fonts/
drwx------ 2 edureka edureka 4096 Nov 14  2017 img/
-rw-rw-r-- 1 edureka edureka 2866 Nov 14  2017 index.html
edureka@kmaster:~/Downloads/project$ ^C
edureka@kmaster:~/Downloads/project$ git git git   


git: 'git' is not a git command. See 'git --help'.

The most similar command is
	init
edureka@kmaster:~/Downloads/project$ 
edureka@kmaster:~/Downloads/project$ 
edureka@kmaster:~/Downloads/project$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)

	css/
	fonts/
	img/
	index.html

nothing added to commit but untracked files present (use "git add" to track)
edureka@kmaster:~/Downloads/project$ git add .
edureka@kmaster:~/Downloads/project$ git commit -m "Commited  "

*** Please tell me who you are.

Run

  git config --global user.email "you@example.com"
  git config --global user.name "Your Name"

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'edureka@kmaster.(none)')
edureka@kmaster:~/Downloads/project$ git config --global user.email "rjuaga"
edureka@kmaster:~/Downloads/project$ git  config --global user.name "nagarjuna nettem"
edureka@kmaster:~/Downloads/project$ git staus
git: 'staus' is not a git command. See 'git --help'.

The most similar command is
	status
edureka@kmaster:~/Downloads/project$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)

	new file:   css/site.css
	new file:   fonts/segoeuil.ttf
	new file:   img/cloneWhite.svg
	new file:   img/deployWhite.svg
	new file:   img/lightbulbWhite.svg
	new file:   img/stackWhite.svg
	new file:   img/successCloudNew.svg
	new file:   img/tweetThis.svg
	new file:   index.html

edureka@kmaster:~/Downloads/project$ git commit -m "commited code"
[master (root-commit) e86ad0f] commited code
 9 files changed, 198 insertions(+)
 create mode 100644 css/site.css
 create mode 100644 fonts/segoeuil.ttf
 create mode 100644 img/cloneWhite.svg
 create mode 100644 img/deployWhite.svg
 create mode 100644 img/lightbulbWhite.svg
 create mode 100644 img/stackWhite.svg
 create mode 100644 img/successCloudNew.svg
 create mode 100644 img/tweetThis.svg
 create mode 100644 index.html
edureka@kmaster:~/Downloads/project$ git status
On branch master
nothing to commit, working tree clean
edureka@kmaster:~/Downloads/project$ git branch b1
edureka@kmaster:~/Downloads/project$ git status
On branch master
nothing to commit, working tree clean
edureka@kmaster:~/Downloads/project$ git checkout b1
Switched to branch 'b1'
edureka@kmaster:~/Downloads/project$ git ls-files
css/site.css
fonts/segoeuil.ttf
img/cloneWhite.svg
img/deployWhite.svg
img/lightbulbWhite.svg
img/stackWhite.svg
img/successCloudNew.svg
img/tweetThis.svg
index.html
edureka@kmaster:~/Downloads/project$ git log --oneline
e86ad0f (HEAD -> b1, master) commited code
edureka@kmaster:~/Downloads/project$ ls
css  fonts  img  index.html
edureka@kmaster:~/Downloads/project$ vim payments
edureka@kmaster:~/Downloads/project$ git add payments
edureka@kmaster:~/Downloads/project$ git commit -m "payments added"
[b1 659637c] payments added
 1 file changed, 2 insertions(+)
 create mode 100644 payments
edureka@kmaster:~/Downloads/project$ git ls-files
css/site.css
fonts/segoeuil.ttf
img/cloneWhite.svg
img/deployWhite.svg
img/lightbulbWhite.svg
img/stackWhite.svg
img/successCloudNew.svg
img/tweetThis.svg
index.html
payments
edureka@kmaster:~/Downloads/project$ git log --oneline
659637c (HEAD -> b1) payments added
e86ad0f (master) commited code
edureka@kmaster:~/Downloads/project$ git checkout master
Switched to branch 'master'
edureka@kmaster:~/Downloads/project$ git ls-files
css/site.css
fonts/segoeuil.ttf
img/cloneWhite.svg
img/deployWhite.svg
img/lightbulbWhite.svg
img/stackWhite.svg
img/successCloudNew.svg
img/tweetThis.svg
index.html
edureka@kmaster:~/Downloads/project$ git merge b1 master
Updating e86ad0f..659637c
Fast-forward
 payments | 2 ++
 1 file changed, 2 insertions(+)
 create mode 100644 payments
edureka@kmaster:~/Downloads/project$ git ls-files
css/site.css
fonts/segoeuil.ttf
img/cloneWhite.svg
img/deployWhite.svg
img/lightbulbWhite.svg
img/stackWhite.svg
img/successCloudNew.svg
img/tweetThis.svg
index.html
payments
edureka@kmaster:~/Downloads/project$ git log --oneline
659637c (HEAD -> master, b1) payments added
e86ad0f commited code
edureka@kmaster:~/Downloads/project$ git remote add origin https://github.com/nagarjunanettem3/myproject.git
edureka@kmaster:~/Downloads/project$ git remote -v
origin	https://github.com/nagarjunanettem3/myproject.git (fetch)
origin	https://github.com/nagarjunanettem3/myproject.git (push)
edureka@kmaster:~/Downloads/project$ 
edureka@kmaster:~/Downloads/project$ git branch
  b1
* master
edureka@kmaster:~/Downloads/project$ git push origin master
Username for 'https://github.com': nagarjunanettem3
Password for 'https://nagarjunanettem3@github.com': 
remote: Support for password authentication was removed on August 13, 2021. Please use a personal access token instead.
remote: Please see https://github.blog/2020-12-15-token-authentication-requirements-for-git-operations/ for more information.
fatal: Authentication failed for 'https://github.com/nagarjunanettem3/myproject.git/'
edureka@kmaster:~/Downloads/project$ git push origin master
Username for 'https://github.com': nagarjunanettem3
Password for 'https://nagarjunanettem3@github.com': 
To https://github.com/nagarjunanettem3/myproject.git
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/nagarjunanettem3/myproject.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
edureka@kmaster:~/Downloads/project$ git push origin b1
Username for 'https://github.com': nagarjunanettem3
Password for 'https://nagarjunanettem3@github.com': 
Counting objects: 17, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (14/14), done.
Writing objects: 100% (17/17), 460.67 KiB | 6.49 MiB/s, done.
Total 17 (delta 1), reused 0 (delta 0)
remote: Resolving deltas: 100% (1/1), done.
remote: 
remote: Create a pull request for 'b1' on GitHub by visiting:
remote:      https://github.com/nagarjunanettem3/myproject/pull/new/b1
remote: 
To https://github.com/nagarjunanettem3/myproject.git
 * [new branch]      b1 -> b1
edureka@kmaster:~/Downloads/project$ git staus
git: 'staus' is not a git command. See 'git --help'.

The most similar command is
	status
edureka@kmaster:~/Downloads/project$ git status
On branch master
nothing to commit, working tree clean
edureka@kmaster:~/Downloads/project$ git push origin master
Username for 'https://github.com': nagarjunanettem3
Password for 'https://nagarjunanettem3@github.com': 
To https://github.com/nagarjunanettem3/myproject.git
 ! [rejected]        master -> master (fetch first)
error: failed to push some refs to 'https://github.com/nagarjunanettem3/myproject.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
edureka@kmaster:~/Downloads/project$ 

